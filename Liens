Get all liens requests for checks memos // pseu·do·code 

requests = get_all_liens_requests_for_checks_memos()
Filter requests for each view

ready_to_be_processed_requests = []
awaiting_action_requests = []
processed_requests = []

for request in requests:
if request['Processed'] != 'Yes' and request['FormStatus'] == 'Request Approved':
// request['Processed'] != 'Yes': "The request has not yet been processed."
//request['FormStatus'] == "'Request Approved': The request has been approved."
//If both conditions are met, then the request is ready to be processed. This is because the request has been approved, but it has not yet been processed.

ready_to_be_processed_requests.append(request)

elif request['FinanceStatus'] in ['Pending', 'Revision Needed', 'Accepted'] and request['Processed'] != 'Yes':

awaiting_action_requests.append(request)

elif request['MemoStatus'] == 'Accepted':

processed_requests.append(request)

//  Check the FinanceStatus and Processed fields of the request object.
    If the FinanceStatus is one of Pending, Revision Needed, or Accepted and the Processed field is not Yes, then the request is added to the awaiting_action_requests list.
    If the MemoStatus field is Accepted, then the request is added to the processed_requests list.
    Otherwise, the request is added to the ready_to_be_processed_requests list.

Render the homepage with the three views

render_homepage(ready_to_be_processed_requests, awaiting_action_requests, processed_requests)

This pseudocode assumes that the following functions are available:

    get_all_liens_requests_for_checks_memos(): Returns a list of all liens requests for checks memos.
    render_homepage(): Renders the homepage with the three views.

The render_homepage() function would need to be implemented to generate the HTML for the three views, and to populate the views with the filtered requests.


###################################################################################################################################################################
C#
// Get all liens requests for checks memos
var requests = GetAllLiensRequestsForChecksMemos();

// Filter requests for each view
var readyToBeProcessedRequests = new List<LienRequest>();
var awaitingActionRequests = new List<LienRequest>();
var processedRequests = new List<LienRequest>();

foreach (var request in requests)
{
    if (request.Processed != "Yes" && request.FormStatus == "Request Approved")
    {
        readyToBeProcessedRequests.Add(request);
    }
    else if (request.FinanceStatus == "Pending" || request.FinanceStatus == "Revision Needed" || request.FinanceStatus == "Accepted" && request.Processed != "Yes")
    {
        awaitingActionRequests.Add(request);
    }
    else if (request.MemoStatus == "Accepted")
    {
        processedRequests.Add(request);
    }
}

// Render the homepage with the three views
RenderHomepage(readyToBeProcessedRequests, awaitingActionRequests, processedRequests);

Use code with caution. Learn more

This code assumes that the following classes are available:

    LienRequest: A class that represents a lien request.
    GetAllLiensRequestsForChecksMemos(): A method that returns a list of all liens requests for checks memos.
    RenderHomepage(): A method that renders the homepage with the three views.

The GetAllLiensRequestsForChecksMemos() and RenderHomepage() methods would need to be implemented to meet the specific needs of your organization.

Here is an example of how the GetAllLiensRequestsForChecksMemos() method could be implemented:


###################################################################################################################################################
Variables: 
FormID
MemoURL
RelMemoDesc
MemoDesc
DocType
FormURL
FormID2
MemoID
EditMemoURL
Form DispURL
EditMemoURL2
FormDesc
RelFormDesc
DeniedFormURL
AddCheckNo
CheckNoDesc
RelCheckURL
EditRequest
FormEditURL





